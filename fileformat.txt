
mare s0:

file ::= { statement } EOF 
statement ::= assignment { ( ',' | ';' ) }
assignment ::= ( string | quotedstring ) [ '=' concatination ]

concatination ::= value { '+' value }
value ::= '{' { statement } '}' | string | quotedstring

mare s1:

file ::= { statement } EOF
statements ::= '{' { statement } '}' | statement 
statement ::= ( 'if' expression statements [ 'else' statements ] | assignment ) { ( ',' | ';' ) }
assignment ::= ( string | quotedstring ) [ ( '=' | '+=' | '-=' ) expression ]

expression ::= orformula [ '?' expression ':' expression ]
orformula ::= andformula { '||' andformula }
andformula ::= comparison { '&&' comparison }
comparison ::= relation { ( '==' | '!=' ) relation }
relation ::= concatination { ( '<' | '>' | '<=' | '>=' ) concatination }
concatination ::= value { ( '+' | '-' ) value }
value ::= '!' value | '(' expression ')' | '{' { statement } '}' | 'true' | 'false' | string | quotedstring

mare s2:

functions and loops?
